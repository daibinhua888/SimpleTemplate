//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Administrator\Documents\GitHub\SimpleTemplate\Code\SimpleTemplate\g4\Template.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace SimpleTemplate.g4 {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TemplateParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface ITemplateListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] TemplateParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] TemplateParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParse([NotNull] TemplateParser.ParseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParse([NotNull] TemplateParser.ParseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] TemplateParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] TemplateParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.repeater_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeater_stmt([NotNull] TemplateParser.Repeater_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.repeater_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeater_stmt([NotNull] TemplateParser.Repeater_stmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.repeater_stmt_begin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeater_stmt_begin([NotNull] TemplateParser.Repeater_stmt_beginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.repeater_stmt_begin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeater_stmt_begin([NotNull] TemplateParser.Repeater_stmt_beginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.repeater_stmt_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeater_stmt_end([NotNull] TemplateParser.Repeater_stmt_endContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.repeater_stmt_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeater_stmt_end([NotNull] TemplateParser.Repeater_stmt_endContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.repeater_stmt_count"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeater_stmt_count([NotNull] TemplateParser.Repeater_stmt_countContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.repeater_stmt_count"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeater_stmt_count([NotNull] TemplateParser.Repeater_stmt_countContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.newlines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewlines([NotNull] TemplateParser.NewlinesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.newlines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewlines([NotNull] TemplateParser.NewlinesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.stringtext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringtext([NotNull] TemplateParser.StringtextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.stringtext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringtext([NotNull] TemplateParser.StringtextContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.placeholderChar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlaceholderChar([NotNull] TemplateParser.PlaceholderCharContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.placeholderChar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlaceholderChar([NotNull] TemplateParser.PlaceholderCharContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.simple_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_variable([NotNull] TemplateParser.Simple_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.simple_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_variable([NotNull] TemplateParser.Simple_variableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.complex_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplex_variable([NotNull] TemplateParser.Complex_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.complex_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplex_variable([NotNull] TemplateParser.Complex_variableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.simple_variable_inner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_variable_inner([NotNull] TemplateParser.Simple_variable_innerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.simple_variable_inner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_variable_inner([NotNull] TemplateParser.Simple_variable_innerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.complex_variable_inner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplex_variable_inner([NotNull] TemplateParser.Complex_variable_innerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.complex_variable_inner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplex_variable_inner([NotNull] TemplateParser.Complex_variable_innerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentity([NotNull] TemplateParser.IdentityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentity([NotNull] TemplateParser.IdentityContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.digital"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDigital([NotNull] TemplateParser.DigitalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.digital"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDigital([NotNull] TemplateParser.DigitalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt([NotNull] TemplateParser.If_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt([NotNull] TemplateParser.If_stmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_conditions_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_conditions_block([NotNull] TemplateParser.If_stmt_conditions_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_conditions_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_conditions_block([NotNull] TemplateParser.If_stmt_conditions_blockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_conditions_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_conditions_body([NotNull] TemplateParser.If_stmt_conditions_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_conditions_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_conditions_body([NotNull] TemplateParser.If_stmt_conditions_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_conditions([NotNull] TemplateParser.If_stmt_conditionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_conditions([NotNull] TemplateParser.If_stmt_conditionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_condition([NotNull] TemplateParser.If_stmt_conditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_condition([NotNull] TemplateParser.If_stmt_conditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_else_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_else_block([NotNull] TemplateParser.If_stmt_else_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_else_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_else_block([NotNull] TemplateParser.If_stmt_else_blockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_else_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_else_body([NotNull] TemplateParser.If_stmt_else_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_else_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_else_body([NotNull] TemplateParser.If_stmt_else_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.if_stmt_end_if_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt_end_if_block([NotNull] TemplateParser.If_stmt_end_if_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.if_stmt_end_if_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt_end_if_block([NotNull] TemplateParser.If_stmt_end_if_blockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.left_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeft_op([NotNull] TemplateParser.Left_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.left_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeft_op([NotNull] TemplateParser.Left_opContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.right_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRight_op([NotNull] TemplateParser.Right_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.right_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRight_op([NotNull] TemplateParser.Right_opContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TemplateParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOp([NotNull] TemplateParser.OpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TemplateParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOp([NotNull] TemplateParser.OpContext context);
}
} // namespace SimpleTemplate.g4
